"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&__createBinding(t,e,n);return __setModuleDefault(t,e),t},__awaiter=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{s(r.next(e))}catch(e){o(e)}}function c(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,c)}s((r=r.apply(e,t||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0});const core=__importStar(require("@actions/core")),JiraClient_1=require("./JiraClient"),main=()=>__awaiter(void 0,void 0,void 0,(function*(){try{const e=process.env.JIRAEMAIL,t=process.env.JIRATOKEN,n=core.getInput("host"),r=core.getInput("project-key"),i=core.getInput("release-name"),o=core.getInput("release-description"),a={changelog:core.getMultilineInput("release-changelog"),name:i,description:o};if(!e)return void core.setFailed("Missing JIRAEMAIL env variable. Use env: JIRAEMAIL: ${{ secrets.MY_JIRA_MAIL_SECRET }}");if(!t)return void core.setFailed("Missing JIRATOKEN env variable. Use env: JIRATOKEN: ${{ secrets.MY_JIRATOKEN_SECRET }}");let c=new JiraClient_1.JiraClient({host:n,email:e,apiToken:t,projectKey:r});yield c.createOrUpdateJiraRelease(a)}catch(e){console.log(e)}}));__awaiter(void 0,void 0,void 0,(function*(){try{const e=process.env.JIRAEMAIL,t=process.env.JIRATOKEN,n=core.getInput("host"),r=core.getInput("project-key"),i=core.getInput("release-name"),o=core.getInput("release-description"),a={changelog:core.getMultilineInput("release-changelog"),name:i,description:o};if(!e)return void core.setFailed("Missing JIRAEMAIL env variable. Use env: JIRAEMAIL: ${{ secrets.MY_JIRA_MAIL_SECRET }}");if(!t)return void core.setFailed("Missing JIRATOKEN env variable. Use env: JIRATOKEN: ${{ secrets.MY_JIRATOKEN_SECRET }}");let c=new JiraClient_1.JiraClient({host:n,email:e,apiToken:t,projectKey:r});yield c.createOrUpdateJiraRelease(a)}catch(e){console.log(e)}}));